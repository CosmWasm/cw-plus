version: 2.1

orbs:
  codecov: codecov/codecov@3.2.2

workflows:
  version: 2
  test:
    jobs:
      - contract_cw1_subkeys
      - contract_cw1_whitelist
      - contract_cw1_whitelist_ng
      - contract_cw3_fixed_multisig
      - contract_cw3_flex_multisig
      - contract_cw4_group
      - contract_cw4_stake
      - contract_cw20_base
      - contract_cw20_ics20
      - contract_cw1155_base
      - package_controllers
      - package_utils
      - package_cw1
      - package_cw2
      - package_cw3
      - package_cw4
      - package_cw20
      - package_cw1155
      - package_multi_test
      - package_storage_plus
      - lint
      - wasm-build
      - benchmarking:
          requires:
            - package_storage_plus
          filters:
            branches:
              only:
                # Long living branches
                - main
                # ðŸ‘‡Add your branch here if benchmarking matters to your work
      - coverage
  deploy:
    jobs:
      - build_and_upload_contracts:
          filters:
           tags:
             only: /^v[0-9]+\.[0-9]+\.[0-9]+.*/
           branches:
             ignore: /.*/
      - build_and_upload_schemas:
          filters:
           tags:
             only: /^v[0-9]+\.[0-9]+\.[0-9]+.*/
           branches:
             ignore: /.*/

jobs:
  contract_cw1_subkeys:
    docker:
      - image: rust:1.58.1
    working_directory: ~/project/contracts/cw1-subkeys
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - restore_cache:
          keys:
            - cargocache-cw1-subkeys-rust:1.58.1-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Unit Tests
          environment:
            RUST_BACKTRACE: 1
          command: cargo unit-test --locked
      - run:
          name: Build and run schema generator
          command: cargo schema --locked
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-cw1-subkeys-rust:1.58.1-{{ checksum "~/project/Cargo.lock" }}

  contract_cw1_whitelist:
    docker:
      - image: rust:1.58.1
    working_directory: ~/project/contracts/cw1-whitelist
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - restore_cache:
          keys:
            - cargocache-cw1-whitelist-rust:1.58.1-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Unit Tests
          environment:
            RUST_BACKTRACE: 1
          command: cargo unit-test --locked
      - run:
          name: Build and run schema generator
          command: cargo schema --locked
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-cw1-whitelist-rust:1.58.1-{{ checksum "~/project/Cargo.lock" }}

  contract_cw1_whitelist_ng:
    docker:
      - image: rust:1.58.1
    working_directory: ~/project/contracts/cw1-whitelist-ng
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - restore_cache:
          keys:
            - cargocache-cw1-whitelist-ng-rust:1.58.1-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Unit Tests
          environment:
            RUST_BACKTRACE: 1
          command: cargo unit-test --locked
      - run:
          name: Build and run schema generator
          command: cargo schema --locked
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-cw1-whitelist-ng-rust:1.58.1-{{ checksum "~/project/Cargo.lock" }}

  contract_cw3_fixed_multisig:
    docker:
      - image: rust:1.58.1
    working_directory: ~/project/contracts/cw3-fixed-multisig
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - restore_cache:
          keys:
            - cargocache-cw3-fixed-multisig-rust:1.58.1-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Unit Tests
          environment:
            RUST_BACKTRACE: 1
          command: cargo unit-test --locked
      - run:
          name: Build and run schema generator
          command: cargo schema --locked
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-cw3-fixed-multisig-rust:1.58.1-{{ checksum "~/project/Cargo.lock" }}

  contract_cw3_flex_multisig:
    docker:
      - image: rust:1.58.1
    working_directory: ~/project/contracts/cw3-flex-multisig
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - restore_cache:
          keys:
            - cargocache-cw3-flex-multisig-rust:1.58.1-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Unit Tests
          environment:
            RUST_BACKTRACE: 1
          command: cargo unit-test --locked
      - run:
          name: Build and run schema generator
          command: cargo schema --locked
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-cw3-flex-multisig-rust:1.58.1-{{ checksum "~/project/Cargo.lock" }}

  contract_cw4_group:
    docker:
      - image: rust:1.58.1
    working_directory: ~/project/contracts/cw4-group
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - restore_cache:
          keys:
            - cargocache-cw4-group-rust:1.58.1-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Unit Tests
          environment:
            RUST_BACKTRACE: 1
          command: cargo unit-test --locked
      - run:
          name: Build and run schema generator
          command: cargo schema --locked
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-cw4-group-rust:1.58.1-{{ checksum "~/project/Cargo.lock" }}

  contract_cw4_stake:
    docker:
      - image: rust:1.58.1
    working_directory: ~/project/contracts/cw4-stake
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - restore_cache:
          keys:
            - cargocache-cw4-stake-rust:1.58.1-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Unit Tests
          environment:
            RUST_BACKTRACE: 1
          command: cargo unit-test --locked
      - run:
          name: Build and run schema generator
          command: cargo schema --locked
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-cw4-stake-rust:1.58.1-{{ checksum "~/project/Cargo.lock" }}

  contract_cw20_base:
    docker:
      - image: rust:1.58.1
    working_directory: ~/project/contracts/cw20-base
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - restore_cache:
          keys:
            - cargocache-cw20-base-rust:1.58.1-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Unit Tests
          environment:
            RUST_BACKTRACE: 1
          command: cargo unit-test --locked
      - run:
          name: Build and run schema generator
          command: cargo schema --locked
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-cw20-base-rust:1.58.1-{{ checksum "~/project/Cargo.lock" }}

  contract_cw20_ics20:
    docker:
      - image: rust:1.58.1
    working_directory: ~/project/contracts/cw20-ics20
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - restore_cache:
          keys:
            - cargocache-cw20-ics20-rust:1.58.1-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Unit Tests
          environment:
            RUST_BACKTRACE: 1
          command: cargo unit-test --locked
      - run:
          name: Build and run schema generator
          command: cargo schema --locked
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-cw20-ics20-rust:1.58.1-{{ checksum "~/project/Cargo.lock" }}

  contract_cw1155_base:
    docker:
      - image: rust:1.58.1
    working_directory: ~/project/contracts/cw1155-base
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - restore_cache:
          keys:
            - cargocache-cw1155-base-rust:1.58.1-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Unit Tests
          environment:
            RUST_BACKTRACE: 1
          command: cargo unit-test --locked
      - run:
          name: Build and run schema generator
          command: cargo schema --locked
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-cw1155-base-rust:1.58.1-{{ checksum "~/project/Cargo.lock" }}

  package_controllers:
    docker:
      - image: rust:1.58.1
    working_directory: ~/project/packages/controllers
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - cargocache-v2-controllers:1.58.1-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Build library for native target
          command: cargo build --locked
      - run:
          name: Run unit tests
          command: cargo test --locked
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-v2-controllers:1.58.1-{{ checksum "~/project/Cargo.lock" }}

  package_utils:
    docker:
      - image: rust:1.58.1
    working_directory: ~/project/packages/utils
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - cargocache-v2-utils:1.58.1-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Build library for native target
          command: cargo build --locked
      - run:
          name: Run unit tests
          command: cargo test --locked
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-v2-utils:1.58.1-{{ checksum "~/project/Cargo.lock" }}

  package_cw1:
    docker:
      - image: rust:1.58.1
    working_directory: ~/project/packages/cw1
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - cargocache-v2-cw1:1.58.1-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Build library for native target
          command: cargo build --locked
      - run:
          name: Run unit tests
          command: cargo test --locked
      - run:
          name: Build and run schema generator
          command: cargo schema --locked
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-v2-cw1:1.58.1-{{ checksum "~/project/Cargo.lock" }}

  package_cw2:
    docker:
      - image: rust:1.58.1
    working_directory: ~/project/packages/cw2
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - cargocache-v2-cw2:1.58.1-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Build library for native target
          command: cargo build --locked
      - run:
          name: Run unit tests
          command: cargo test --locked
      # note: there are no schemas to generate
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-v2-cw2:1.58.1-{{ checksum "~/project/Cargo.lock" }}

  package_cw3:
    docker:
      - image: rust:1.58.1
    working_directory: ~/project/packages/cw3
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - cargocache-v2-cw3:1.58.1-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Build library for native target
          command: cargo build --locked
      - run:
          name: Run unit tests
          command: cargo test --locked
      - run:
          name: Build and run schema generator
          command: cargo schema --locked
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-v2-cw3:1.58.1-{{ checksum "~/project/Cargo.lock" }}

  package_cw4:
    docker:
      - image: rust:1.58.1
    working_directory: ~/project/packages/cw4
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - cargocache-v2-cw4:1.58.1-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Build library for native target
          command: cargo build --locked
      - run:
          name: Run unit tests
          command: cargo test --locked
      - run:
          name: Build and run schema generator
          command: cargo schema --locked
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-v2-cw4:1.58.1-{{ checksum "~/project/Cargo.lock" }}

  package_cw20:
    docker:
      - image: rust:1.58.1
    working_directory: ~/project/packages/cw20
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - cargocache-v2-cw20:1.58.1-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Build library for native target
          command: cargo build --locked
      - run:
          name: Run unit tests
          command: cargo test --locked
      - run:
          name: Build and run schema generator
          command: cargo schema --locked
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-v2-cw20:1.58.1-{{ checksum "~/project/Cargo.lock" }}

  package_cw1155:
    docker:
      - image: rust:1.58.1
    working_directory: ~/project/packages/cw1155
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - cargocache-v2-cw1155:1.58.1-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Build library for native target
          command: cargo build --locked
      - run:
          name: Run unit tests
          command: cargo test --locked
      - run:
          name: Build and run schema generator
          command: cargo schema --locked
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-v2-cw1155:1.58.1-{{ checksum "~/project/Cargo.lock" }}

  lint:
    docker:
      - image: rust:1.58.1
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - cargocache-v2-lint-rust:1.58.1-{{ checksum "Cargo.lock" }}
      - run:
          name: Add rustfmt component
          command: rustup component add rustfmt
      - run:
          name: Add clippy component
          command: rustup component add clippy
      - run:
          name: Check formatting of workspace
          command: cargo fmt -- --check
      - run:
          name: Clippy linting on workspace
          command: cargo clippy --all-targets -- -D warnings
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: cargocache-v2-lint-rust:1.58.1-{{ checksum "Cargo.lock" }}

  # This runs one time on the top level to ensure all contracts compile properly into wasm.
  # We don't run the wasm build per contract build, and then reuse a lot of the same dependencies, so this speeds up CI time
  # for all the other tests.
  # We also sanity-check the resultant wasm files.
  wasm-build:
    docker:
      - image: rust:1.59.0
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - restore_cache:
          keys:
            - cargocache-wasm-rust:1.59.0-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Add wasm32 target
          command: rustup target add wasm32-unknown-unknown
      - run:
          name: Build Wasm Release
          command: |
            for C in ./contracts/*/
            do
              echo "Compiling `basename $C`..."
              (cd $C && cargo build --release --lib --target wasm32-unknown-unknown --locked)
            done
      - run:
          name: Install cosmwasm-check
          # Uses --debug for compilation speed
          command: cargo install --debug --version 1.1.0 cosmwasm-check
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-wasm-rust:1.59.0-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Check wasm contracts
          command: cosmwasm-check ./target/wasm32-unknown-unknown/release/*.wasm

  package_multi_test:
    docker:
      - image: rust:1.58.1
    working_directory: ~/project/packages/multi-test
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - cargocache-v2-multi-test:1.58.1-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Build library for native target
          command: cargo build --locked
      - run:
          name: Run unit tests
          command: cargo test --locked
      - run:
          name: Run unit tests (with iterator)
          command: cargo test --locked --features iterator
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-v2-multi-test:1.58.1-{{ checksum "~/project/Cargo.lock" }}

  package_storage_plus:
    docker:
      - image: rust:1.58.1
    working_directory: ~/project/packages/storage-plus
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - cargocache-v2-storage-plus:1.58.1-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Build library for native target (no iterator)
          command: cargo build --locked --no-default-features
      - run:
          name: Run unit tests (no iterator)
          command: cargo test --locked --no-default-features
      - run:
          name: Build library for native target (with iterator and macro)
          command: cargo build --locked --all-features
      - run:
          name: Run unit tests (with iterator and macro)
          command: cargo test --locked --all-features
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-v2-storage-plus:1.58.1-{{ checksum "~/project/Cargo.lock" }}

  benchmarking:
    docker:
      - image: rust:1.58.1
    environment:
      RUST_BACKTRACE: 1
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information (default; stable)
          command: rustc --version && cargo --version
      - restore_cache:
          keys:
            - cargocache-v2-benchmarking-rust:1.58.1-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Run storage-plus benchmarks
          working_directory: ~/project/packages/storage-plus
          command: cargo bench -- --color never --save-baseline
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-v2-benchmarking-rust:1.58.1-{{ checksum "~/project/Cargo.lock" }}

  coverage:
    # https://circleci.com/developer/images?imageType=machine
    machine:
      image: ubuntu-2004:202201-02
    steps:
      - checkout
      - run:
          name: Run tests with coverage
          command: |
            mkdir -p cov
            docker run --security-opt seccomp=unconfined -v "${PWD}:/volume" xd009642/tarpaulin \
              sh -c "cargo tarpaulin --skip-clean --frozen --out Xml --output-dir cov"
      - codecov/upload:
          file: cov/cobertura.xml

  # This job roughly follows the instructions from https://circleci.com/blog/publishing-to-github-releases-via-circleci/
  build_and_upload_contracts:
    docker:
      # Image from https://github.com/cibuilds/github, based on alpine
      - image: cibuilds/github:0.13
    steps:
      - run:
          name: Install Docker client
          command: apk add docker-cli
      - setup_remote_docker
      - checkout
      - run:
          # We cannot mount local folders, see https://circleci.com/docs/2.0/building-docker-images/#mounting-folders
          name: Prepare volume with source code
          command: |
            # create a dummy container which will hold a volume with config
            docker create -v /code --name with_code alpine /bin/true
            # copy a config file into this volume
            docker cp Cargo.toml with_code:/code
            docker cp Cargo.lock with_code:/code
            # copy code into this volume
            docker cp ./contracts with_code:/code
            docker cp ./packages with_code:/code
      - run:
          name: Build development contracts
          command: |
            docker run --volumes-from with_code cosmwasm/workspace-optimizer:0.12.8
            docker cp with_code:/code/artifacts ./artifacts
      - run:
          name: Show data
          command: |
            ls -l artifacts
            cat artifacts/checksums.txt
      - run:
          name: Publish artifacts on GitHub
          command: |
            TAG="$CIRCLE_TAG"
            TITLE="$TAG"
            BODY="Attached there are some build artifacts generated at this tag. Those are for development purposes only! Please use crates.io to find the packages of this release."
            ghr -t "$GITHUB_TOKEN" \
              -u "$CIRCLE_PROJECT_USERNAME" -r "$CIRCLE_PROJECT_REPONAME" \
              -c "$CIRCLE_SHA1" \
              -n "$TITLE" -b "$BODY" \
              -replace \
              "$TAG" ./artifacts/

  build_and_upload_schemas:
    docker:
      - image: rust:1.58.1
    working_directory: ~/project
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Create schemas directory
          command: mkdir -p schemas
      - run:
          name: Install ghr
          command: wget https://github.com/tcnksm/ghr/releases/download/v0.14.0/ghr_v0.14.0_linux_amd64.tar.gz -O - | tar -zxvf - -C /usr/local/bin --wildcards --strip-components 1 */ghr
      - run:
          name: Build and run schema generator for packages
          command: |
            for S in ./packages/*/src/bin/schema.rs
            do
              P=$(dirname $S)/../..
              echo "Generating schema for $P ..."
              (cd $P && cargo schema --locked && tar -zcf ~/project/schemas/$(basename $(pwd))_schema.tar.gz ./schema)
            done
      - run:
          name: Build and run schema generator for contracts
          command: |
            export GLOBIGNORE='./contracts/cw1-whitelist-ng/'
            for C in ./contracts/*/
            do
              echo "Generating schema for $C ..."
              (cd $C && cargo schema --locked && mv ./schema/*.json ~/project/schemas/)
            done
      - run:
          name: Show data
          command: ls -l ./schemas
      - run:
          name: Publish schemas on GitHub
          command: |
            TAG="$CIRCLE_TAG"
            TITLE="$TAG"
            BODY="Attached there are some schemas and build artifacts generated at this tag. Those are for development purposes only! Please use crates.io to find the packages of this release."
            ghr -t "$GITHUB_TOKEN" \
              -u "$CIRCLE_PROJECT_USERNAME" -r "$CIRCLE_PROJECT_REPONAME" \
              -c "$CIRCLE_SHA1" \
              -n "$TITLE" -b "$BODY" \
              -replace \
              "$TAG" ./schemas/
